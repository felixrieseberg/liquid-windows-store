(function($)
{
    $.fn.menuAim = function(opts)
    {
        this.each(function()
        {
            init.call(this, opts)
        });
        return this
    };
    function init(opts)
    {
        var $menu = $(this),
            activeRow = null,
            mouseLocs = [],
            lastDelayLoc = null,
            timeoutId = null,
            options = $.extend({
                rowSelector: "> li", submenuSelector: "*", submenuDirection: "right", toleranceUp: 75, toleranceDown: 75, enter: $.noop, exit: $.noop, activate: $.noop, deactivate: $.noop, exitMenu: $.noop
            }, opts);
        var MOUSE_LOCS_TRACKED = 3,
            DELAY = 300;
        var mousemoveDocument = function(e)
            {
                mouseLocs.push({
                    x: e.pageX, y: e.pageY
                });
                if (mouseLocs.length > MOUSE_LOCS_TRACKED)
                {
                    mouseLocs.shift()
                }
            };
        var mouseleaveMenu = function()
            {
                if (timeoutId)
                {
                    clearTimeout(timeoutId)
                }
                if (options.exitMenu(this))
                {
                    if (activeRow)
                    {
                        options.deactivate(activeRow)
                    }
                    activeRow = null
                }
            };
        var mouseenterRow = function()
            {
                if (timeoutId)
                {
                    clearTimeout(timeoutId)
                }
                options.enter(this);
                possiblyActivate(this)
            },
            mouseleaveRow = function()
            {
                options.exit(this)
            };
        var clickRow = function()
            {
                activate(this)
            };
        var activate = function(row)
            {
                if (row == activeRow)
                {
                    return
                }
                if (activeRow)
                {
                    options.deactivate(activeRow)
                }
                options.activate(row);
                activeRow = row
            };
        var possiblyActivate = function(row)
            {
                var delay = activationDelay();
                if (delay)
                {
                    timeoutId = setTimeout(function()
                    {
                        possiblyActivate(row)
                    }, delay)
                }
                else
                {
                    activate(row)
                }
            };
        var activationDelay = function()
            {
                if (!activeRow || !$(activeRow).is(options.submenuSelector))
                {
                    return 0
                }
                var offset = $menu.offset(),
                    upperLeft = {
                        x: offset.left, y: offset.top - options.toleranceUp
                    },
                    upperRight = {
                        x: offset.left + $menu.outerWidth(), y: upperLeft.y - options.toleranceUp
                    },
                    lowerLeft = {
                        x: offset.left, y: offset.top + $menu.outerHeight() + options.toleranceDown
                    },
                    lowerRight = {
                        x: offset.left + $menu.outerWidth(), y: lowerLeft.y + options.toleranceDown
                    },
                    loc = mouseLocs[mouseLocs.length - 1],
                    prevLoc = mouseLocs[0];
                if (!loc)
                {
                    return 0
                }
                if (!prevLoc)
                {
                    prevLoc = loc
                }
                if (prevLoc.x < offset.left || prevLoc.x > lowerRight.x || prevLoc.y < offset.top || prevLoc.y > lowerRight.y)
                {
                    return 0
                }
                if (lastDelayLoc && loc.x == lastDelayLoc.x && loc.y == lastDelayLoc.y)
                {
                    return 0
                }
                function slope(a, b)
                {
                    return (b.y - a.y) / (b.x - a.x)
                }
                ;
                var decreasingCorner = upperRight,
                    increasingCorner = lowerRight;
                if (options.submenuDirection == "left")
                {
                    decreasingCorner = lowerLeft;
                    increasingCorner = upperLeft
                }
                else if (options.submenuDirection == "below")
                {
                    decreasingCorner = lowerRight;
                    increasingCorner = lowerLeft
                }
                else if (options.submenuDirection == "above")
                {
                    decreasingCorner = upperLeft;
                    increasingCorner = upperRight
                }
                var decreasingSlope = slope(loc, decreasingCorner),
                    increasingSlope = slope(loc, increasingCorner),
                    prevDecreasingSlope = slope(prevLoc, decreasingCorner),
                    prevIncreasingSlope = slope(prevLoc, increasingCorner);
                if (decreasingSlope < prevDecreasingSlope && increasingSlope > prevIncreasingSlope)
                {
                    lastDelayLoc = loc;
                    return DELAY
                }
                lastDelayLoc = null;
                return 0
            };
        $menu.mouseleave(mouseleaveMenu).find(options.rowSelector).mouseenter(mouseenterRow).mouseleave(mouseleaveRow).click(clickRow);
        $(document).mousemove(mousemoveDocument)
    }
    ;
})(jQuery);
"use strict";
;
(function($)
{
    function ShellUI()
    {
        var self = this;
        self.shellUserDropdown = null;
        self.shellNavDropdown = null;
        self.shellNavTab = null;
        self.shellToggle = null;
        self.breakpoint = 899;
        self.resizeTimeout = null;
        self.resizeThrottler = function()
        {
            if (!self.resizeTimeout)
            {
                self.resizeTimeout = setTimeout(function()
                {
                    self.resizeTimeout = null;
                    self.resizeHandler()
                }, 250)
            }
        };
        self.resizeHandler = function()
        {
            self.shellNavDropdown.adjustMenuPane()
        };
        self.matchesSmall = function()
        {
            if (window.matchMedia)
            {
                return window.matchMedia('(max-width: ' + self.breakpoint + 'px)').matches
            }
            else
            {
                return ($(window).width() < self.breakpoint)
            }
        };
        self.matchesLarge = function()
        {
            if (window.matchMedia)
            {
                return window.matchMedia('(min-width: ' + self.breakpoint + 'px)').matches
            }
            else
            {
                return ($(window).width() >= self.breakpoint)
            }
        };
        self.init = function()
        {
            self.shellUserDropdown = new ShellUserDropdown(self);
            self.shellNavDropdown = new ShellNavDropdown(self);
            self.shellNavTab = new ShellNavTab(self);
            self.shellToggle = new ShellToggle(self);
            $(window).resize(self.resizeThrottler);
            $(".shell-header-dropdown-content").menuAim({
                rowSelector: "> dl", activate: self.shellNavTab.display, toleranceUp: 500, toleranceDown: 300
            })
        };
        self.init()
    }
    function ShellUserDropdown(shellUI)
    {
        var self = this;
        self.shellUI = shellUI;
        self.open = function()
        {
            $('.shell-header-user').addClass('active')
        };
        self.close = function()
        {
            $('.shell-header-user').removeClass('active')
        };
        self.toggle = function(label)
        {
            $(label).closest('.shell-header-user').toggleClass('active')
        };
        self.init = function()
        {
            $('.shell-header-user-label a').on('click.shellUserDropdown', function()
            {
                self.toggle(this);
                return false
            });
            $(document).on('click.shellUserDropdownOutside', function(event)
            {
                if (!$(event.target).closest('.shell-header-user').length)
                {
                    self.close()
                }
            });
            $(document).on('keyup.shellUserDropdownOutside', function(event)
            {
                if (event.keyCode == 27)
                {
                    self.close()
                }
            })
        };
        self.init()
    }
    function ShellNavDropdown(shellUI)
    {
        var self = this;
        self.shellUI = shellUI;
        self.open = function(dropdown)
        {
            dropdown.addClass('active');
            if (this.shellUI.matchesSmall())
            {
                dropdown.children(".shell-header-dropdown-content").attr("style", "")
            }
            else if (self.shellUI.matchesLarge())
            {
                if (dropdown.hasClass('horizontalLayout'))
                {
                    var containerL2HorizontalId = dropdown.data('navcontainer');
                    var containerL2Horizontal = $('#' + containerL2HorizontalId),
                        otherContainers = containerL2Horizontal.siblings('.shell-header-horizontalL2-container');
                    if (!containerL2Horizontal.hasClass('active'))
                    {
                        otherContainers.removeClass('active');
                        containerL2Horizontal.addClass('active')
                    }
                }
                else
                {
                    self.shellUI.shellNavTab.displayFirst(dropdown);
                    self.shellUI.shellNavTab.displayImg(dropdown);
                    self.offset(dropdown)
                }
            }
        };
        self.offset = function(dropdown)
        {
            var shellHeaderWrapper = dropdown.closest('.shell-header-wrapper'),
                dropdownContent = dropdown.find('.shell-header-dropdown-content');
            var edgeToAdjust = "left";
            var offset = 0;
            var diffOfLeftGapAndRightGap = 0;
            if ($('body').css('direction') === "rtl")
            {
                edgeToAdjust = "right";
                offset = dropdown.offset().left + dropdown.outerWidth() - (shellHeaderWrapper.offset().left + dropdownContent.outerWidth());
                var adjustedRightEdge = dropdown.offset().left + dropdown.outerWidth() - offset;
                diffOfLeftGapAndRightGap = ($("body").width() - adjustedRightEdge) - (adjustedRightEdge - dropdownContent.outerWidth())
            }
            else
            {
                offset = shellHeaderWrapper.offset().left + shellHeaderWrapper.outerWidth() - (dropdown.offset().left + dropdownContent.outerWidth());
                var adjustedLeftEdge = dropdown.offset().left + offset;
                diffOfLeftGapAndRightGap = adjustedLeftEdge - ($("body").width() - adjustedLeftEdge - dropdownContent.outerWidth())
            }
            if (diffOfLeftGapAndRightGap < 0)
            {
                offset -= diffOfLeftGapAndRightGap / 2
            }
            dropdownContent.css(edgeToAdjust, (offset < 0) ? offset : '')
        };
        self.adjustMenuPaneSize = function(tab, contentContainer)
        {
            if (this.shellUI.matchesSmall())
            {
                $(contentContainer[0]).attr("style", "")
            }
            else if (tab.hasClass('shell-tab-mcol'))
            {
                var label = tab.children('.shell-header-dropdown-tab-label');
                var content = tab.children('.shell-header-dropdown-tab-content');
                if (label && content)
                {
                    contentContainer.width(label.outerWidth() + content.outerWidth());
                    var menuGroups = content.children();
                    if (menuGroups.length > 0)
                    {
                        var top = menuGroups[0].offsetTop;
                        var bottom = 0;
                        for (var i = 0; i < menuGroups.length; i++)
                        {
                            var menuGroupBottom = menuGroups[i].offsetTop + menuGroups[i].clientHeight;
                            if (menuGroupBottom > bottom)
                            {
                                bottom = menuGroupBottom
                            }
                        }
                        contentContainer.height(bottom - top + 20)
                    }
                }
            }
        };
        self.adjustMenuPane = function()
        {
            var dropdown = $('.shell-header-dropdown.active');
            if (dropdown.length)
            {
                self.adjustMenuPaneSize(dropdown.find('.shell-header-dropdown-tab.active'), dropdown.children('.shell-header-dropdown-content'));
                self.offset(dropdown)
            }
        };
        self.close = function(dropdown)
        {
            dropdown.removeClass('active')
        };
        self.closeAll = function()
        {
            $(".shell-header-dropdown:not(.horizontalLayout)").removeClass('active')
        };
        self.toggle = function(label)
        {
            var dropdown = $(label).closest('.shell-header-dropdown'),
                otherDropdowns = dropdown.siblings('.shell-header-dropdown'),
                otherLabels = dropdown.siblings('.shell-header-dropdown-label');
            if (dropdown.length)
            {
                if (dropdown.hasClass('active') && !dropdown.hasClass('horizontalLayout'))
                {
                    self.close(dropdown)
                }
                else
                {
                    otherLabels.removeClass('active');
                    otherDropdowns.removeClass('active');
                    self.open(dropdown)
                }
            }
        };
        self.init = function()
        {
            $('.shell-header-dropdown-label a:not(.shell-header-direct-link)').click(function()
            {
                self.toggle(this)
            });
            $(document).on('click.shellNavDropdownOutside', function(event)
            {
                if (!$(event.target).closest('.shell-header-nav').length)
                {
                    self.closeAll()
                }
            });
            $(document).on('keyup.shellNavDropdownOutside', function(event)
            {
                if (event.keyCode == 27)
                {
                    self.closeAll()
                }
            })
        };
        self.init()
    }
    function ShellNavTab(shellUI)
    {
        var self = this;
        self.shellUI = shellUI;
        self.display = function(label)
        {
            if (self.shellUI.matchesLarge())
            {
                var tab = $(label).closest('.shell-header-dropdown-tab'),
                    tabs = tab.siblings('.shell-header-dropdown-tab');
                if (!tab.hasClass('active'))
                {
                    tabs.removeClass('active');
                    tab.addClass('active')
                }
                var contentContainer = tab.closest('.shell-header-dropdown-content');
                shellUI.shellNavDropdown.adjustMenuPaneSize(tab, contentContainer);
                if (tab.find('.shell-header-dropdown-tab-content').length)
                {
                    contentContainer.removeClass('shell-header-dropdown-content-notab');
                    self.displayImg(tab)
                }
                else if (!contentContainer.hasClass('shell-header-dropdown-content-notab'))
                {
                    contentContainer.addClass('shell-header-dropdown-content-notab')
                }
            }
        };
        self.displayImg = function(tab)
        {
            tab.find('img[data-src]').attr('src', function()
            {
                return $(this).attr('data-src')
            }).removeAttr('data-src')
        };
        self.toggle = function(label)
        {
            var tab = $(label).closest('.shell-header-dropdown-tab'),
                tabs = tab.siblings('.shell-header-dropdown-tab');
            if (tab.hasClass('active'))
            {
                tab.removeClass('active')
            }
            else
            {
                tabs.removeClass('active');
                tab.addClass('active')
            }
        };
        self.displayFirst = function(dropdown)
        {
            self.display(dropdown.find('.shell-header-dropdown-tab:first-child .shell-header-dropdown-tab-label a'))
        };
        self.init = function()
        {
            $('.shell-header-dropdown-tab-label a').on('focus.shellNavTab', function()
            {
                if (self.shellUI.matchesLarge())
                {
                    self.display(this)
                }
            }).on('click.shellNavTab', function()
            {
                if (!$(this).closest('.shell-header-dropdown-tab-label').hasClass('shell-header-L2menu-direct-link'))
                {
                    if (self.shellUI.matchesSmall())
                    {
                        self.toggle(this)
                    }
                    return false
                }
                return true
            })
        };
        self.init()
    }
    function ShellToggle(shellUI)
    {
        var self = this;
        self.shellUI = shellUI;
        self.init = function()
        {
            $('.shell-header-toggle-search').on('click.shellToggle', function()
            {
                var shellHeaderSearch = $('.shell-header-search');
                shellHeaderSearch.toggleClass('expanded');
                if (shellHeaderSearch.hasClass('expanded'))
                {
                    shellHeaderSearch.find('input[type="search"]').focus()
                }
            });
            $('.shell-header-toggle-menu').on('click.shellToggle', function()
            {
                $('.shell-header-user, .shell-header-nav').toggleClass('expanded')
            })
        };
        self.init()
    }
    $(function()
    {
        window.shellUI = new ShellUI
    })
})(jQuery);
(function($)
{
    var meControlGlobalOptions = null;
    var userIsSignedIn = false;
    var activeUser = null;
    var isActiveUserSet = false;
    var isMeControlReady = false;
    var isReloadMeOptionsPending = false;
    var meControlReadyEvent = "$MeControlReady";
    var events = null;
    function getCookie(name)
    {
        var allcookies = document.cookie.split('; ');
        for (var i = 0; i < allcookies.length; i++)
        {
            var parts = allcookies[i].split('=');
            var cookieName = decode(parts.shift());
            if (cookieName === name)
            {
                return decode(parts.join('='))
            }
        }
        return null
    }
    function setCookie(name, value, days)
    {
        var expires;
        if (days)
        {
            var date = new Date;
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = '; expires=' + date.toUTCString()
        }
        else
        {
            expires = ''
        }
        window.document.cookie = name + '=' + value + expires + '; path=/;'
    }
    function decode(inputString)
    {
        var value = decodeURIComponent(inputString.replace('/\+/g', ' '));
        if (value.indexOf('"') === 0)
        {
            value = value.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\')
        }
        return value
    }
    function logToConsole(eventId, dataPoints)
    {
        dataPoints = dataPoints || {};
        var str = 'MECONTROLLOG:' + eventId + ',';
        for (var id in dataPoints)
        {
            str += id + '=' + dataPoints[id] + ','
        }
        console && console.log(str)
    }
    function onSearchEvent(searchform)
    {
        if (events && events.onSearch)
        {
            events.onSearch(searchform)
        }
    }
    function updateUserData(userData)
    {
        if (isMeControlReady)
        {
            meControlGlobalOptions.userData = userData;
            window.MSA.$MeControl.setActiveUser(userData)
        }
        else
        {
            activeUser = userData
        }
    }
    function addExtensibleLinks()
    {
        if (meControlGlobalOptions && meControlGlobalOptions.extensibleLinks)
        {
            window.MSA.$MeControl.setExtensibleLinks(meControlGlobalOptions.extensibleLinks)
        }
    }
    function initializeMeControl(meControlOptions)
    {
        if (meControlOptions)
        {
            meControlOptions.userData = {
                idp: window.msCommonShell.SupportedAuthIdp.MSA, firstName: null, lastName: null, memberName: null, cid: null, authenticatedState: window.msCommonShell.NotSignedIn
            };
            meControlOptions.events = {onEventLog: function(eventId, dataPoints)
                {
                    if (meControlOptions.debug)
                    {
                        logToConsole(eventId, dataPoints)
                    }
                    if (events && events.onEventLog)
                    {
                        events.onEventLog('MeControl_' + eventId, dataPoints)
                    }
                    if (eventId === meControlReadyEvent)
                    {
                        isMeControlReady = true;
                        if (activeUser != null && !isActiveUserSet)
                        {
                            isActiveUserSet = true;
                            updateUserData(activeUser)
                        }
                        if (isReloadMeOptionsPending)
                        {
                            isReloadMeOptionsPending = false;
                            window.MSA.$MeControl.reinit(meControlGlobalOptions)
                        }
                        addExtensibleLinks()
                    }
                }};
            userIsSignedIn = false;
            meControlGlobalOptions = $.extend(true, {}, meControlOptions, meControlGlobalOptions || {});
            ;
            if (window.MSA && window.MSA.MeControl)
            {
                window.MSA.MeControl.Loader.load(meControlGlobalOptions)
            }
        }
    }
    function reloadMeControlOptions(meOptions)
    {
        if (meOptions)
        {
            meControlGlobalOptions = $.extend(true, {}, meControlGlobalOptions, meOptions);
            if (window.MSA && window.MSA.$MeControl)
            {
                isReloadMeOptionsPending = false;
                window.MSA.$MeControl.reinit(meControlGlobalOptions)
            }
            else
            {
                isReloadMeOptionsPending = true
            }
        }
    }
    function initializeShell(shellOptions)
    {
        if (shellOptions != null)
        {
            if (shellOptions.events != null)
            {
                events = shellOptions.events
            }
            if (shellOptions.currentMenuItemId != null)
            {
                var element = $(document.getElementById(shellOptions.currentMenuItemId));
                if (element.length)
                {
                    element.addClass("current");
                    if (element.hasClass('horizontalLayout'))
                    {
                        element.addClass('active')
                    }
                    else
                    {
                        element.parents('.shell-header-dropdown-tab').find('.shell-header-dropdown-tab-label').addClass("current");
                        var elementL1 = element.parents('.shell-header-dropdown');
                        if (elementL1.hasClass('horizontalLayout'))
                        {
                            elementL1.addClass('active')
                        }
                        elementL1.find('.shell-header-dropdown-label').addClass("current")
                    }
                }
                element = $(document.getElementById(shellOptions.currentMenuItemId + '_HL'));
                if (element.length)
                {
                    element.addClass("current");
                    var elementL2Container = element.parents('.shell-header-horizontalL2-container');
                    elementL2Container.siblings('.shell-header-horizontalL2-container').removeClass('active');
                    elementL2Container.addClass('active')
                }
            }
            if (shellOptions.searchSuggestCallback != null)
            {
                var seachSuggestion = window.msCommonShellSuggestion;
                seachSuggestion.initialize(shellOptions.searchSuggestCallback)
            }
            if (shellOptions.meControlOptions != null)
            {
                reloadMeControlOptions(shellOptions.meControlOptions)
            }
        }
        if (!$('.shell-header-horizontalL2-container.active').length)
        {
            $('.shell-header-horizontalL2-container').first().addClass('active')
        }
    }
    function isUserSignedIn()
    {
        return userIsSignedIn
    }
    window.msCommonShell = {
        AuthState: {
            SignedIn: 1, SignedInIdp: 2, NotSignedIn: 3
        }, SupportedAuthIdp: {
                MSA: 'msa', AAD: 'aad'
            }, meControlOptions: function()
            {
                return meControlGlobalOptions
            }, isUserSignedIn: isUserSignedIn, getCookie: getCookie, setCookie: setCookie, internalInitialize: function(meControlOptions)
            {
                initializeMeControl(meControlOptions)
            }, initialize: function(shellOptions)
            {
                initializeShell(shellOptions)
            }, load: function(shellOptions)
            {
                initializeShell(shellOptions)
            }, updateUserData: function(userData)
            {
                updateUserData(userData)
            }, onSearch: function(searchForm)
            {
                onSearchEvent(searchForm)
            }
    };
    $(window).on('message onmessage', function(event)
    {
        var data = event.originalEvent.data;
        if (data)
        {
            data = new String(data);
            var count = data.split('=')[1];
            $('#shopping-cart-amount').text(count)
        }
    })
})(jQuery);
(function($)
{
    $(function()
    {
        var shell = window.msCommonShell;
        if (meControlInitOptions)
        {
            shell.internalInitialize(meControlInitOptions);
            if (meControlInitOptions.lcaDisclaimerEnabled)
            {
                var banner = $("#lca-cookie-notification");
                if (shell.getCookie("msstore_hide_cn") !== "true")
                {
                    banner.addClass("shell-notification-active")
                }
                $("#lca-disclaimer-close").click(function()
                {
                    shell.setCookie("msstore_hide_cn", "true", 365);
                    banner.removeClass("shell-notification-active")
                })
            }
        }
    })
})(jQuery);
(function($)
{
    window.msCommonShellSuggestion = {
        initialize: function(textChanged_callback)
        {
            var input = $('#cli_shellHeaderSearchInput');
            var output = $('#cli_searchSuggestionsResults');
            var container = $('#cli_searchSuggestionsContainer');
            var prevText = "";
            input.bind('input', function()
            {
                var text = input.val();
                if (text != prevText)
                {
                    textChanged_callback({
                        text: text, response: window.msCommonShellSuggestion.displayResults
                    })
                }
                prevText = text
            });
            input.keydown(function(key)
            {
                var selected = output.find('.selected');
                var selection_exists = selected.length > 0;
                switch (key.keyCode)
                {
                    case 38:
                        selection_exists ? shiftSelection(selected.prev()) : shiftSelection(output.children().last());
                        key.preventDefault();
                        break;
                    case 40:
                        selection_exists ? shiftSelection(selected.next()) : shiftSelection(output.children().first());
                        key.preventDefault();
                        break;
                    case 13:
                        if (selection_exists)
                        {
                            selected.click();
                            key.preventDefault()
                        }
                        break
                }
                function shiftSelection(to)
                {
                    selected.removeClass('selected');
                    to.addClass('selected')
                }
            });
            input.focus(function()
            {
                if (output.children().length > 0)
                {
                    container.addClass('visible')
                }
            });
            input.blur(function()
            {
                setTimeout(function()
                {
                    container.removeClass('visible')
                }, 200)
            })
        }, displayResults: function(results)
            {
                var query = this;
                var input = $('#cli_shellHeaderSearchInput');
                var output = $('#cli_searchSuggestionsResults');
                if (query.text == input.val())
                {
                    output.empty();
                    $.each(results.suggestions, function(i, item)
                    {
                        var li = $('<li>');
                        if (item.image)
                        {
                            li.append($('<img>').attr('src', item.image))
                        }
                        li.append(item.title.replace(new RegExp(query.text, 'ig'), "<strong>$&</strong>"));
                        li.mouseover(function()
                        {
                            output.children().removeClass('selected');
                            li.addClass('selected')
                        });
                        li.click(function()
                        {
                            input.val(item.title);
                            if (item.target)
                            {
                                window.location.href = item.target
                            }
                            else
                            {
                                $('#srv_shellHeaderSearchForm').submit()
                            }
                        });
                        output.append(li)
                    })
                }
                if (output.children().length > 0)
                {
                    $('#cli_searchSuggestionsContainer').addClass('visible')
                }
                else
                {
                    $('#cli_searchSuggestionsContainer').removeClass('visible')
                }
            }
    }
})(jQuery)