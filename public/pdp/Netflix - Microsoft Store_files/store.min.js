define('oneStore.uriBuilder', [], function()
{
    function addOrUpdateQueryParameter(uri, key, value)
    {
        var regexp = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(regexp))
        {
            return uri.replace(regexp, '$1' + key + "=" + value + '$2')
        }
        else
        {
            return uri + separator + key + "=" + value
        }
    }
    function getValueOfQueryParameter(uri, key)
    {
        var regexp = new RegExp("[?&]" + key + "=([^&]*)", "i");
        var matches = uri.match(regexp);
        if (matches && matches.length > 1)
        {
            return matches[1]
        }
        else
        {
            return null
        }
    }
    function removeQueryParameter(uri, key)
    {
        var regexp = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var matches = uri.match(regexp);
        if (matches)
        {
            if (matches.length > 2 && matches[2] === '&')
            {
                return uri.replace(regexp, '$1')
            }
            return uri.replace(regexp, '')
        }
        return uri
    }
    return {
            addOrUpdateQueryParameter: addOrUpdateQueryParameter, getValueOfQueryParameter: getValueOfQueryParameter, removeQueryParameter: removeQueryParameter
        }
});
define('javascriptExtensions', [], function()
{
    function isFunction(o)
    {
        return typeof o === 'function'
    }
    if (!isFunction(Array.prototype.forEach))
    {
        Array.prototype.forEach = function(callback, thisArg)
        {
            var len = this.length,
                i;
            for (i = 0; i < len; i++)
            {
                if (i in this)
                {
                    callback.call(thisArg, this[i], i, this)
                }
            }
        }
    }
    if (!isFunction(Array.prototype.map))
    {
        Array.prototype.map = function(callback, thisArg)
        {
            var len = this.length,
                i,
                result = [];
            for (i = 0; i < len; i++)
            {
                if (i in this)
                {
                    result[i] = callback.call(thisArg, this[i])
                }
            }
            return result
        }
    }
    if (!Array.prototype.filter)
    {
        Array.prototype.filter = function(func)
        {
            var length = this.length;
            if (typeof func !== "function")
            {
                throw new TypeError;
            }
            var resource = new Array;
            var prototype = arguments[1];
            for (var i = 0; i < length; i++)
            {
                if (i in this)
                {
                    var val = this[i];
                    if (func.call(prototype, val, i, this))
                    {
                        resource.push(val)
                    }
                }
            }
            return resource
        }
    }
    if (!Array.prototype.indexOf)
    {
        Array.prototype.indexOf = function(obj)
        {
            for (var i = 0; i < this.length; i++)
            {
                if (this[i] === obj)
                {
                    return i
                }
            }
            return -1
        }
    }
});
require(['javascriptExtensions'], function(){});
define('oneStore.userAgent', ['window'], function(window)
{
    function isFromThresholdDevice()
    {
        if (!window.navigator.userAgent)
        {
            return false
        }
        var lowerCaseUserAgent = window.navigator.userAgent.toLowerCase();
        return lowerCaseUserAgent.indexOf("windows nt 6.4") >= 0 || lowerCaseUserAgent.indexOf("windows nt 10") >= 0 || lowerCaseUserAgent.indexOf("windows phone 10") >= 0
    }
    function isFromWin8XDevice()
    {
        if (!window.navigator.userAgent)
        {
            return false
        }
        var lowerCaseUserAgent = window.navigator.userAgent.toLowerCase();
        return (lowerCaseUserAgent.indexOf("windows nt 6.3") >= 0 || lowerCaseUserAgent.indexOf("windows nt 6.2") >= 0 || lowerCaseUserAgent.indexOf("windows nt 8") >= 0 || lowerCaseUserAgent.indexOf("windows phone 8") >= 0) && !isFromThresholdDevice()
    }
    function isFromWindowsDevice()
    {
        if (!window.navigator.userAgent)
        {
            return false
        }
        var lowerCaseUserAgent = window.navigator.userAgent.toLowerCase();
        return lowerCaseUserAgent.indexOf("windows") >= 0
    }
    return {
            isFromThresholdDevice: isFromThresholdDevice, isFromWin8XDevice: isFromWin8XDevice, isFromWindowsDevice: isFromWindowsDevice
        }
});
define('oneStore.prune', ['document', 'oneStore.userAgent'], function(document, userAgent)
{
    function pruneByUserAgent(pruneUnlessNotWindowsSelector, pruneUnlessWinLessThan8XSelector, pruneUnlessWin8XSelector, pruneUnlessThresholdSelector)
    {
        var selectorsToPrune = [pruneUnlessNotWindowsSelector, pruneUnlessWinLessThan8XSelector, pruneUnlessWin8XSelector, pruneUnlessThresholdSelector];
        if (userAgent.isFromThresholdDevice())
        {
            selectorsToPrune.splice(3, 1);
            selectorsToPrune.forEach(prune)
        }
        else if (userAgent.isFromWin8XDevice())
        {
            selectorsToPrune.splice(2, 1);
            selectorsToPrune.forEach(prune)
        }
        else if (userAgent.isFromWindowsDevice())
        {
            selectorsToPrune.splice(1, 1);
            selectorsToPrune.forEach(prune)
        }
        else
        {
            selectorsToPrune.splice(0, 1);
            selectorsToPrune.forEach(prune)
        }
    }
    ;
    function prune(selector)
    {
        if (selector)
        {
            selector.remove()
        }
    }
    return {
            pruneByUserAgent: pruneByUserAgent, prune: prune
        }
});
define('oneStore.page', ['oneStore.uriBuilder', 'window', 'jquery'], function(uriBuilder, window)
{
    var skipItemsAttributeName = 'data-skip-items';
    var skipItemsQueryParameterName = 'skipItems';
    var paging = function(pagingBar)
        {
            $(pagingBar).find('.cli_pageLink').each(function(i, pageLink)
            {
                var anchor = $(pageLink);
                anchor.attr('href', uriBuilder.addOrUpdateQueryParameter(getStoreScopedResultsBaseUrl(), skipItemsQueryParameterName, anchor.attr(skipItemsAttributeName)))
            })
        };
    var getStoreScopedResultsBaseUrl = function()
        {
            return uriBuilder.addOrUpdateQueryParameter(window.location.href, 's', 'store')
        };
    return {start: paging}
});
define('oneStore.rank', ['oneStore.uriBuilder', 'window', 'jquery'], function(uriBuilder, window)
{
    var rankQueryParameterName = 'rank';
    var ranking = function(rankList)
        {
            var currentRank = uriBuilder.getValueOfQueryParameter(window.location.href, rankQueryParameterName);
            if (currentRank !== null && currentRank !== undefined && currentRank !== '')
            {
                rankList.val(currentRank)
            }
            rankList.change(function(e)
            {
                rank(e.target.value)
            });
            function rank(value)
            {
                var newLoc = uriBuilder.addOrUpdateQueryParameter(window.location.href, rankQueryParameterName, value);
                window.location.href = uriBuilder.removeQueryParameter(newLoc, "skipItems")
            }
        };
    return {start: ranking}
});
define('oneStore.scopeSwitcher', ['oneStore.uriBuilder', 'window'], function(uriBuilder, window)
{
    var scopeSwitcher = function(nav)
        {
            $(nav).find('select').change(function(e)
            {
                window.open(e.target.value, '_top')
            });
            $(nav).find('li').on('click', function(e)
            {
                window.open($(e.target).data('href'), '_top')
            })
        };
    return {start: scopeSwitcher}
});
define('oneStore.redirect', ['clickstreamTracker', 'document', 'ids', 'oneStore.userAgent', 'window'], function(clickstreamTracker, document, ids, userAgent, window)
{
    var autoRedirectToNativeStorePdp = function(itemDetailsElement, productId, ignoreReferrer)
        {
            var targetUri = itemDetailsElement.data("target");
            if (shouldRedirectToNativeStore(ignoreReferrer) && productId)
            {
                var ig = ids.getImpressionGuid();
                targetUri += '&webig=' + ig;
                var contentDetails = {
                        name: 'AutoRedirectToNativeStorePDP', targetUri: targetUri, contentId: productId, contentSource: 'DisplayCatalog'
                    };
                var customData = {productId: productId};
                clickstreamTracker.captureContentPageAction(contentDetails, customData);
                window.location.href = targetUri
            }
        };
    function shouldRedirectToNativeStore(ignoreReferrer)
    {
        return (ignoreReferrer || referrerIsNotMsCom(document.referrer)) && userAgent.isFromThresholdDevice()
    }
    function referrerIsNotMsCom(referrer)
    {
        return !referrer || referrer.indexOf('microsoft.com') < 0
    }
    return {
            autoRedirectToNativeStorePdp: autoRedirectToNativeStorePdp, shouldRedirectToNativeStore: shouldRedirectToNativeStore
        }
});
define('oneStore.search', ['window', 'jquery', 'clickstreamTracker'], function(window, $, tracker)
{
    var queryQueryParameterName = 'query';
    var scopeQueryParameterName = 'scope';
    var searchScopeKey = 'ms.searchscope';
    var headerSearch = function(searchSection, searchUrl)
        {
            var scopeElementsActive = false;
            var searchText = searchSection.find('.search-text');
            var searchScopeElements = searchSection.find('.search-scope-elements');
            searchSection.keypress(function(e)
            {
                if (e.keyCode === 13)
                {
                    search();
                    tracker.capturePageAction(e.currentTarget)
                }
            });
            searchSection.attr(searchScopeKey, searchScopeValue());
            searchText.focus(function()
            {
                showScopeDropDown()
            });
            searchSection.find('.btn-sm').click(function(e)
            {
                search();
                tracker.capturePageAction(e.currentTarget)
            });
            searchScopeElements.find('input').click(function(e)
            {
                searchSection.attr(searchScopeKey, e.target.value)
            });
            function search()
            {
                if (searchUrl && searchText.val().length > 0)
                {
                    window.location.href = (searchUrl + '?' + queryQueryParameterName + '=' + searchText.val() + '&' + scopeQueryParameterName + '=' + searchScopeValue())
                }
            }
            function searchScopeValue()
            {
                return searchScopeElements.find('input:checked').val() || "store"
            }
            function documentClick(e)
            {
                if (searchSection.find(e.target).length < 1)
                {
                    hideScopeDropDown()
                }
            }
            function hideScopeDropDown()
            {
                if (scopeElementsActive)
                {
                    $(document).unbind('click', documentClick);
                    searchScopeElements.hide();
                    scopeElementsActive = false
                }
            }
            function showScopeDropDown()
            {
                if (!scopeElementsActive)
                {
                    $(document).bind('click', documentClick);
                    searchScopeElements.css('top', searchSection.height()).css('marginLeft', searchText.css('marginLeft')).outerWidth(searchText.outerWidth()).show();
                    scopeElementsActive = true
                }
            }
        };
    return {start: headerSearch}
});
define('oneStore.category', ['oneStore.uriBuilder', 'window', 'jquery'], function(uriBuilder, window, $)
{
    var queryParameters = ["cat0", "cat1", "cat2"];
    var initialize = function(categoryList, titleList)
        {
            titleList.each(function(index, element)
            {
                $(element).click(function()
                {
                    $(this).find('.glyphicon').fadeOut(100, function()
                    {
                        $(this).toggleClass('glyphicon-plus glyphicon-minus').fadeIn(100)
                    });
                    $(element).siblings('.radioGroup').toggle();
                    $(this).closest('ul').parents('ul').find('.nav-group li').toggleClass(function()
                    {
                        if ($(this).is('.expanded'))
                        {
                            return 'collapsed'
                        }
                        else
                        {
                            return 'expanded'
                        }
                    })
                })
            });
            queryParameters.forEach(function(queryParameter)
            {
                var encodedQuery = uriBuilder.getValueOfQueryParameter(window.location.href, queryParameter);
                var currentValue = (encodedQuery ? encodedQuery : "All").toLowerCase();
                var radioList = categoryList.filter("[name='" + queryParameter + "'][value='" + currentValue + "']");
                if (radioList.length)
                {
                    $(radioList).each(function()
                    {
                        $(this).prop("checked", true)
                    })
                }
            });
            categoryList.change(function(e)
            {
                changeCategory(e.target.name, e.target.value)
            })
        };
    function changeCategory(name, value)
    {
        var targetLocation = window.location.href;
        for (var i = 0; i < queryParameters.length; i++)
        {
            if (name.toLowerCase() === queryParameters[i].toLowerCase())
            {
                for (var j = i; j < queryParameters.length; j++)
                {
                    targetLocation = uriBuilder.removeQueryParameter(targetLocation, queryParameters[j])
                }
            }
        }
        if (value !== "all")
        {
            targetLocation = uriBuilder.addOrUpdateQueryParameter(targetLocation, name, value)
        }
        targetLocation = uriBuilder.removeQueryParameter(targetLocation, "skipItems");
        window.location.href = targetLocation
    }
    ;
    var initOneUi = function(categoryList)
        {
            categoryList.each(function(index, element)
            {
                var catName = $(element).data('name');
                var catValue = $(element).data('value');
                var targetLocation = window.location.href;
                for (var i = 0; i < queryParameters.length; i++)
                {
                    if (catName.toLowerCase() === queryParameters[i].toLowerCase())
                    {
                        for (var j = i; j < queryParameters.length; j++)
                        {
                            targetLocation = uriBuilder.removeQueryParameter(targetLocation, queryParameters[j])
                        }
                    }
                }
                if (catValue !== "all")
                {
                    targetLocation = uriBuilder.addOrUpdateQueryParameter(targetLocation, catName, catValue)
                }
                targetLocation = uriBuilder.removeQueryParameter(targetLocation, "skipItems");
                targetLocation = uriBuilder.removeQueryParameter(targetLocation, "rank");
                element.href = targetLocation
            })
        };
    return {
            start: initialize, startOneUi: initOneUi
        }
});
define('oneStore.collapseButton', ['jquery'], function($)
{
    function initialize(element)
    {
        element.click(function()
        {
            var newCaption = element.data('alternate-text');
            element.data('alternate-text', element.text());
            element.text(newCaption);
            var targetSelector = element.data('target');
            $(targetSelector).toggle()
        })
    }
    return {initialize: initialize}
});
require(['oneStore.collapseButton', 'jquery'], function(collapseButton, $)
{
    $().ready(function()
    {
        collapseButton.initialize($('.cli_collapseButton'))
    })
});
define('oneStore.refine', ['oneStore.category', 'oneStore.uriBuilder'], function(category, uriBuilder)
{
    var refine = function(refiner, refined)
        {
            refiner.on('click', function()
            {
                refined.siblings().toggleClass("notOnPage");
                refined.parents().siblings().toggleClass("notOnPage");
                refiner.toggleClass("onlyThingOnPage");
                refined.toggleClass("onlyThingOnPage");
                $('.close-refiner').toggleClass("onlyThingOnPage");
                category.start($('.categoryRadio'), $('.categoryTitle'))
            })
        };
    var unRefine = function(unRefiner, refiner)
        {
            unRefiner.on('click', function()
            {
                refiner.click()
            })
        };
    var clear = function(clearTrigger, clearAction)
        {
            clearTrigger.on('click', function()
            {
                clearAction.click()
            })
        };
    var clearOneUi = function(clearTrigger, clearList)
        {
            var queryNamesArray = clearList.split(',');
            var newUrl = window.location.href;
            queryNamesArray.forEach(function(query)
            {
                newUrl = uriBuilder.removeQueryParameter(newUrl, query)
            });
            clearTrigger.attr('href', newUrl)
        };
    var initRefineXsOneUi = function(config)
        {
            var xsRefineControl = config.xsRefineControl;
            var refineListTitle = config.refineListTitle;
            var xsRefineAction = config.xsRefineAction;
            var searchResultsControl = config.searchResultsControl;
            var xsRefineClose = config.xsRefineClose;
            $([xsRefineAction, xsRefineClose].join()).on('click', function()
            {
                $([xsRefineControl, searchResultsControl].join()).toggleClass('hidden');
                return false
            });
            $(xsRefineAction).text(refineListTitle)
        };
    return {
            start: refine, end: unRefine, clear: clear, clearOneUi: clearOneUi, initRefineXsOneUi: initRefineXsOneUi
        }
});
define('oneStore.ellipses', ['jquery'], function($)
{
    var ellipses = function(truncatee)
        {
            truncatee.each(function(index, element)
            {
                var jqueryElement = $(element);
                var divh = parseInt(jqueryElement.css('line-height'), 10) * 2;
                var oldtext = "";
                var newtext = jqueryElement.text();
                while (oldtext !== newtext && jqueryElement.outerHeight() > divh)
                {
                    oldtext = newtext;
                    jqueryElement.text(function(index, text)
                    {
                        return text.replace(/\W*\s(\S)*$/, '...')
                    });
                    newtext = jqueryElement.text()
                }
            })
        };
    return {start: ellipses}
});
define('oneStore.images', ['jquery'], function($)
{
    var changeImagesIfFailed = function(changeItems, fallbackUrl)
        {
            changeItems.each(function(index, item)
            {
                $(item).on("error", function()
                {
                    item.src = fallbackUrl
                });
                if (item.complete && item.width === 0 || item.src === "")
                {
                    item.src = fallbackUrl
                }
                $(item).removeClass("cli_needsDefaultImage")
            })
        };
    var chooseBestImage = function(){};
    return {
            changeImagesIfFailed: changeImagesIfFailed, chooseBestImage: chooseBestImage
        }
});
define('oneStore.unifiedChannel', ['jquery', 'knockout', 'service', 'oneStore.slick', 'oneStore.uriBuilder', 'clickstreamTracker', 'cookie'], function($, ko, service, slick, uriBuilder, clickstreamTracker, cookie)
{
    function setup()
    {
        $(function()
        {
            $('.cli_unifiedChannel').each(function(id, value)
            {
                startLoad('unifiedChannel' + id, $(value))
            })
        })
    }
    function startLoad(id, element)
    {
        element.attr("id", id);
        var serviceUrl = element.data('service-url');
        if (!serviceUrl)
        {
            return
        }
        var viewModel = {
                items: ko.observableArray(), columnSize: ko.observable(3)
            };
        viewModel.columns = ko.computed(function()
        {
            var result = [],
                column = [],
                colSize = this.columnSize();
            for (var i = 0, j = this.items().length; i < j; i++)
            {
                if (i % colSize === 0)
                {
                    result.push(column);
                    column = []
                }
                column.push(this.items()[i])
            }
            if (column !== [])
            {
                result.push(column)
            }
            return result
        }, viewModel);
        var authUserOnly = element.data('authuseronly');
        if (authUserOnly !== 'True' || (authUserOnly === 'True' && cookie.getCookie('StoreMsaUser')))
        {
            var image = element.find(".media-img").first();
            if (image.length !== 0)
            {
                var width = image.width();
                var aspectRatio = 1;
                if (image.closest('.ratio-2-1').length)
                {
                    aspectRatio = 2
                }
                else if (image.closest('.ratio-1-1').length || image.closest('.ratio-movie').length)
                {
                    aspectRatio = 1
                }
                serviceUrl = uriBuilder.addOrUpdateQueryParameter(serviceUrl, 'desiredImageWidth', width);
                serviceUrl = uriBuilder.addOrUpdateQueryParameter(serviceUrl, 'desiredImageAspectRatio', aspectRatio)
            }
            var version = element.data('version');
            var requestOptions = {
                    contractVersion: version, currentOperationName: 'Load Channel ' + element.data('operation'), operationName: element.data('operation'), serviceName: element.data('service'), version: version, url: serviceUrl, contentType: "application/json"
                };
            service.get(requestOptions).then(function(result)
            {
                if (result && result.Items)
                {
                    $.each(result.Items, function(index, item)
                    {
                        item["index"] = index + 1;
                        viewModel.items.push(item)
                    });
                    clickstreamTracker.capturePartialView(id)
                }
                var carousel = element.find('.section-carousel');
                ko.applyBindings(viewModel, element.get(0));
                if (carousel.length)
                {
                    element.replaceWith(element.children());
                    slick.loadOne(carousel)
                }
            })
        }
    }
    return {
            setup: setup, startLoad: startLoad
        }
});
require(['oneStore.unifiedChannel'], function(channel)
{
    channel.setup()
});
define('flighting.config', ['ids'], function(ids)
{
    function getFlightMap()
    {
        var flights = getFlights();
        var flightMap = {};
        if (flights.indexOf("helloworld:test") > -1)
        {
            flightMap['clientFlightDetect1'] = 'clientFlightDetect2'
        }
        if (flights.indexOf("legacyordervalidation:1") > -1)
        {
            flightMap['orderValidator'] = 'orderValidatorLegacy'
        }
        if (flights.indexOf("Task807154:1") === -1)
        {
            flightMap['allowedPiFilter'] = 'allowedPiFilter_DisabledFeature'
        }
        if (flights.indexOf("usepidl:1") > -1)
        {
            flightMap['Router'] = 'RouterWithPaymentAndBilling';
            flightMap['settings.noPaymentInstruments'] = 'settings.noPaymentInstrumentsV2'
        }
        if (flights.indexOf("cannotbuyfree:1") > -1)
        {
            flightMap['isPiRequiredForOrderV2'] = 'isPiRequiredForOrder'
        }
        if (flights.indexOf("showaddaddress:1") > -1)
        {
            flightMap['showAddAddress'] = 'showAddAddressReady'
        }
        if (flights.indexOf("noCacheOrders:1") === -1)
        {
            flightMap['blendService.request'] = 'blendService.requestV2';
            flightMap['getServiceCallHeaders'] = 'getServiceCallHeadersV2';
            flightMap['Order'] = 'OrderV2';
            flightMap['orderAdapter'] = 'orderAdapterCachedOrder';
            flightMap['orderResultHandler'] = 'orderResultHandlerCachedOrder';
            flightMap['PurchaseConfirmRoute'] = 'PurchaseConfirmRouteCachedOrder';
            flightMap['PurchaseConfirmController'] = 'PurchaseConfirmControllerCachedOrder'
        }
        return flightMap
    }
    ;
    function getFlights()
    {
        var flightingInfo = ids.getFlights();
        return flightingInfo && flightingInfo.split(',') || []
    }
    return {
            getFlightMap: getFlightMap, getFlights: getFlights
        }
});
define('flighting.mapper', ['flighting.config'], function(flightingConfig)
{
    var mappedFlights = flightingConfig && flightingConfig.getFlightMap();
    if (mappedFlights)
    {
        require.config({map: {"*": mappedFlights}})
    }
});
require(['flighting.mapper'], function(){});
define("storePageName", ['jquery'], function($)
{
    return function()
        {
            var pagename = $('meta[name=\'ms.pagename\']').attr('content');
            if (!pagename)
            {
                pagename = "Unknown"
            }
            return pagename
        }
});
require.config({map: {clickstreamTracker: {pageName: 'storePageName'}}});
require(["clickstreamTracker", "cookie", "oneStore.uriBuilder", "document"], function(tracker, cookie, uriBuilder, document)
{
    tracker.setAppId("UniStore");
    var isUserSignedIn = cookie.getCookie('StoreMsaUser') || cookie.getCookie('StoreAadUser');
    tracker.setSignInStatus(isUserSignedIn ? true : false);
    if (document.referrer && document.referrer.indexOf('https://login.live') === 0)
    {
        var actualReferrer = uriBuilder.getValueOfQueryParameter(document.referrer, "arurl");
        if (actualReferrer !== null)
        {
            var url = decodeURIComponent(actualReferrer);
            tracker.setReferrer(url)
        }
    }
    tracker.init()
});
define("oneStore.entitlements", ["document", "jquery", "service"], function(document, $, service)
{
    var entitlementsAjaxBaseUrl = "/{0}/store/webapi/productEntitlements";
    var pageSize = 100;
    var priorRequests = [];
    function initialize()
    {
        $.each($(".entitlements"), function(index, item)
        {
            var element = $(item);
            var locale = element.data("locale");
            var market = element.data("market");
            var productId = element.data("product-id");
            var itemType = element.data("item-type");
            loadDataAsync(locale, market, productId, itemType)
        })
    }
    function loadDataAsync(locale, market, productId, itemType)
    {
        var key = (itemType + "$" + productId).toLowerCase();
        var ajaxUrl = entitlementsAjaxBaseUrl.replace("{0}", locale.toLowerCase());
        ajaxUrl += "?market=" + market.toLowerCase();
        ajaxUrl += "&pageSize=" + pageSize;
        ajaxUrl += "&productId=" + window.encodeURIComponent(productId.toLowerCase());
        ajaxUrl += "&itemType=" + window.encodeURIComponent(itemType.toLowerCase());
        if (priorRequests.hasOwnProperty(key))
        {
            return
        }
        else
        {
            priorRequests[key] = ajaxUrl
        }
        var requestOptions = {
                currentOperationName: "GetProductEntitlements", operationName: "ProductEntitlements", serviceName: "Entitlements", url: ajaxUrl, contentType: "application/json"
            };
        service.get(requestOptions).then(function(result)
        {
            var entitlement = null;
            if (result && result.Items && result.Items.length > 0)
            {
                entitlement = result.Items[0]
            }
            $(document).trigger("entitlementLoaded", entitlement)
        })
    }
    return {initialize: initialize}
});
require(["oneStore.entitlements", "oneStore.storeShell", "jquery"], function(entitlements, shell, $)
{
    $().ready(function()
    {
        if (shell.isUserSignedIn())
        {
            entitlements.initialize()
        }
    })
});
require(["document", "jquery"], function(document, $)
{
    $(document).on("entitlementLoaded", function(event, entitlement)
    {
        if (entitlement)
        {
            $(".requiresEntitlement").toggleClass("hidden")
        }
    })
});
define('oneStore.reviews', ['jquery', 'knockout', 'service', 'clickstreamTracker'], function($, ko, service, clickstreamTracker)
{
    var skipItems = 0;
    var pageSize = 0;
    var maxItems = 0;
    var ajaxBaseUrl = "";
    var itemRangeDescriptionFormat = "";
    var viewModel = {items: ko.observableArray([])};
    function initialize()
    {
        if ($('.cli_reviews').length === 0 || $("#reviewsPagingSection").length === 0)
        {
            return
        }
        var reviewsDiv = $("#reviewsPagingSection");
        pageSize = parseInt(reviewsDiv.data("page-size"));
        maxItems = parseInt(reviewsDiv.data("max-items"));
        ajaxBaseUrl = reviewsDiv.data('service-url');
        itemRangeDescriptionFormat = reviewsDiv.data('item-range-description-format');
        ko.applyBindings(viewModel, $('.cli_reviews').get(0));
        updateButtonStates();
        var pageNextLink = $("#reviewsPageNext");
        pageNextLink.click(function()
        {
            if (!pageNextLink.prop("disabled"))
            {
                skipItems = skipItems + pageSize;
                loadDataAsync(ajaxBaseUrl, skipItems, pageSize)
            }
            else
            {
                return false
            }
        });
        var pagePreviousLink = $("#reviewsPagePrevious");
        pagePreviousLink.click(function()
        {
            if (!pagePreviousLink.prop("disabled"))
            {
                skipItems = (skipItems >= pageSize) ? skipItems - pageSize : 0;
                loadDataAsync(ajaxBaseUrl, skipItems, pageSize)
            }
            else
            {
                return false
            }
        })
    }
    function updateButtonStates()
    {
        enableDisableButton($("#reviewsPagePrevious"), (skipItems > 0));
        enableDisableButton($("#reviewsPageNext"), (skipItems + pageSize < maxItems))
    }
    function enableDisableButton(element, enable)
    {
        if (enable)
        {
            element.prop("disabled", false);
            element.removeClass("disabled");
            element.attr("href", "#ReviewsTop")
        }
        else
        {
            element.prop("disabled", true);
            element.addClass("disabled");
            element.removeAttr("href")
        }
    }
    function updateItemRangeDescription()
    {
        var text = itemRangeDescriptionFormat;
        text = text.replace("{startingIndex}", skipItems + 1);
        text = text.replace("{endingIndex}", skipItems + viewModel.items().length);
        text = text.replace("{maxItems}", maxItems);
        $(".itemRangeDescription").text(text)
    }
    function loadDataAsync(ajaxBaseUrl, skipItems, pageSize)
    {
        var serviceUrl = ajaxBaseUrl + "&skipItems=" + skipItems;
        serviceUrl += "&pageSize=" + pageSize;
        var requestOptions = {
                currentOperationName: "GetMoreReviews", operationName: "Reviews", serviceName: "RatingsReviews", url: serviceUrl, contentType: "application/json"
            };
        service.get(requestOptions).then(function(result)
        {
            if (result && result.Items)
            {
                viewModel.items.removeAll();
                $.each(result.Items, function(index, item)
                {
                    item["index"] = index + 1;
                    viewModel.items.push(item)
                });
                $('.srv_reviews').hide();
                $(".cli_reviews").show();
                updateButtonStates();
                updateItemRangeDescription();
                clickstreamTracker.capturePartialView("Reviews")
            }
        })
    }
    return {initialize: initialize}
});
require(['oneStore.reviews', 'jquery'], function(reviews, $)
{
    $().ready(function()
    {
        reviews.initialize()
    })
});
define('oneStore.Handlebars.helpers', ['Handlebars'], function(handlebars)
{
    var ifCond = function(a, operator, b, options)
        {
            switch (operator)
            {
                case'==':
                    return (a == b) ? options.fn(this) : options.inverse(this);
                case'===':
                    return (a === b) ? options.fn(this) : options.inverse(this);
                case'<':
                    return (a < b) ? options.fn(this) : options.inverse(this);
                case'<=':
                    return (a <= b) ? options.fn(this) : options.inverse(this);
                case'>':
                    return (a > b) ? options.fn(this) : options.inverse(this);
                case'>=':
                    return (a >= b) ? options.fn(this) : options.inverse(this);
                case'&&':
                    return (a && b) ? options.fn(this) : options.inverse(this);
                case'||':
                    return (a || b) ? options.fn(this) : options.inverse(this);
                default:
                    return options.inverse(this)
            }
        };
    var stringEqual = function(a, b, options)
        {
            return (a.toUpperCase() === b.toUpperCase()) ? options.fn(this) : options.inverse(this)
        };
    var when = function(a, b, opts)
        {
            if (a === b)
            {
                return opts.fn(this)
            }
            else
            {
                return opts.inverse(this)
            }
        };
    var whenAny = function()
        {
            var args = [].slice.apply(arguments);
            var opts = args.pop();
            var source = args[0];
            var targets = args.slice(1);
            for (var i = 0; i < targets.length; i++)
            {
                if (source === targets[i])
                {
                    return opts.fn(this)
                }
            }
            return opts.inverse(this)
        };
    var ifAll = function()
        {
            var args = [].slice.apply(arguments);
            var opts = args.pop();
            var fn = opts.fn;
            for (var i = 0; i < args.length; ++i)
            {
                if (args[i])
                {
                    continue
                }
                fn = opts.inverse;
                break
            }
            return fn(this)
        };
    var unlessAll = function()
        {
            var args = [].slice.apply(arguments);
            var opts = args.pop();
            var fn = opts.fn;
            for (var i = 0; i < args.length; ++i)
            {
                if (!args[i])
                {
                    continue
                }
                fn = opts.inverse;
                break
            }
            return fn(this)
        };
    var last = function(a, b, opts)
        {
            var index = parseInt(a),
                count = parseInt(b);
            if ((index + 1) % count === 0)
            {
                return opts.fn(this)
            }
            else
            {
                return opts.inverse(this)
            }
        };
    var plusOne = function(number)
        {
            return number + 1
        };
    function registerHelpers()
    {
        handlebars.registerHelper('last', last);
        handlebars.registerHelper('when', when);
        handlebars.registerHelper('whenAny', whenAny);
        handlebars.registerHelper('ifCond', ifCond);
        handlebars.registerHelper('ifAll', ifAll);
        handlebars.registerHelper('unlessAll', unlessAll);
        handlebars.registerHelper('stringEqual', stringEqual);
        handlebars.registerHelper('plusOne', plusOne)
    }
    function generateHtml(templateName, model)
    {
        registerHelpers();
        var template = handlebars.templates[templateName];
        if (!template)
        {
            writeLog("cannot find handlebars template: " + templateName)
        }
        return template(model).replace(/\ufeff/, '')
    }
    function writeLog(message)
    {
        if (typeof console === "undefined" || typeof console.log === "undefined")
        {
            return
        }
        console.log(message)
    }
    return {
            register: registerHelpers, generateHtml: generateHtml
        }
});
require(['oneStore.Handlebars.helpers'], function(helpers)
{
    helpers.register()
});
define('oneStore.storeShell', ['jquery', 'cookie', 'service', 'clickstreamTracker', 'vortexEvents'], function($, cookie, service, biTracker, vortexEvents)
{
    function isUserSignedIn()
    {
        return (cookie.getCookie('StoreMsaUser') || cookie.getCookie('StoreAadUser'))
    }
    function getUserInfo()
    {
        $(function()
        {
            var shell = window.msCommonShell;
            if (isUserSignedIn())
            {
                var requestOptions = {
                        currentOperationName: 'GetUserDetails', operationName: 'getuserjson', serviceName: 'FrontDoor', url: "/store/user/getuserjson", version: '1', contentType: "application/json"
                    };
                service.get(requestOptions).then(function(result)
                {
                    if (result != undefined)
                    {
                        if (result.AuthenticationType === 'Windows Live ID')
                        {
                            var userData = {
                                    idp: shell.SupportedAuthIdp.MSA, firstName: result.FirstName, lastName: result.LastName, memberName: result.Name, cid: result.PassportCid, authenticatedState: shell.AuthState.SignedIn
                                };
                            shell.updateUserData(userData)
                        }
                        else if (result.AuthenticationType === 'AAD')
                        {
                            var userData = {
                                    idp: shell.SupportedAuthIdp.AAD, firstName: result.FirstName, lastName: result.LastName, memberName: result.EmailAddress, cid: result.OrganizationId, authenticatedState: shell.AuthState.SignedIn
                                };
                            shell.updateUserData(userData)
                        }
                    }
                })
            }
        })
    }
    function initSearchSuggest(requestEndpoint, locale)
    {
        var handlers = {
                AS: function(suggest)
                {
                    return {title: suggest.Txt}
                }, QuickProduct: function(suggest)
                    {
                        return {
                                title: suggest.Title, image: suggest.ImageUrl, target: suggest.Url
                            }
                    }
            };
        var shellOptions = {searchSuggestCallback: function(query)
                {
                    var requestParams = {
                            query: query.text, clientId: "7F27B536-CF6B-4C65-8638-A0F8CBDFCA65", scope: "Microsoft", market: locale, source: "store", productCount: 3
                        };
                    $.ajax({
                        type: "GET", dataType: "json", url: requestEndpoint + '?' + $.param(requestParams), success: function(data)
                            {
                                query.response({suggestions: $.map(data.AS.Results, function(v)
                                    {
                                        return v.Suggests.map(handlers[v.Type])
                                    })})
                            }
                    })
                }};
        return shellOptions
    }
    function initShell(autoSuggestionInfo)
    {
        var shellOptions = {events: {
                    onEventLog: function(eventId, dataPoints)
                    {
                        if (eventId.indexOf('MeControl_') >= 0 && dataPoints.type)
                        {
                            if (dataPoints.type === 'qos' && dataPoints.success === '0')
                            {
                                var eventData = {
                                        currentOperationName: eventId, isSuccess: false, latencyMs: dataPoints.duration, errorMessage: dataPoints.errorCode + (dataPoints.IDPError ? ':' + dataPoints.IDPError : ''), requestUri: dataPoints.targetUri, serviceName: 'MeControl', operationName: eventId
                                    };
                                vortexEvents.sendApiComplete(eventData)
                            }
                            if (dataPoints.type == 'bici' && eventId.indexOf('Ready') < 0)
                            {
                                var content = {
                                        name: eventId, contentId: eventId, areaName: 'MeControl', targetUri: dataPoints.targetUri
                                    };
                                biTracker.captureContentPageAction(content)
                            }
                        }
                    }, onSearch: function(searchForm)
                        {
                            var query = searchForm.q.value;
                            var scope = searchForm.form.value;
                            var biContent = {
                                    name: "Search", targetUri: searchForm.action + "?" + $(searchForm).serialize()
                                };
                            var customData = {
                                    searchTerm: query, searchScope: scope
                                };
                            biTracker.captureContentPageAction(biContent, customData)
                        }
                }};
        if (autoSuggestionInfo)
        {
            var suggestOptions = initSearchSuggest(autoSuggestionInfo.requestEndpoint, autoSuggestionInfo.locale);
            shellOptions = $.extend(true, {}, shellOptions, suggestOptions)
        }
        window.msCommonShell.load(shellOptions)
    }
    return {
            getUserInfo: getUserInfo, isUserSignedIn: isUserSignedIn, initShell: initShell
        }
});
define('oneStore.slick', ['jquery'], function($)
{
    var breakpoints = {
            vp1: 320, vp2: 540, vp3: 768, vp4: 992, vp5: 1400
        };
    function loadAll()
    {
        $('.section-carousel').not('.unifiedChannel .section-carousel').each(function(i, element)
        {
            loadOne($(element))
        })
    }
    function loadOne(element)
    {
        if (element.hasClass('spotlight'))
        {
            element.slick({
                dots: true, draggable: true, infinite: true, slide: '.slide', appendDots: element.next('.spotlight-dots')
            })
        }
        else if (element.hasClass('carousel-8'))
        {
            element.slick({
                infinite: false, speed: 800, slide: '.slide', slidesToShow: 8, slidesToScroll: 8, appendArrows: element.closest('.section').find('.section-header-arrows'), responsive: [{
                            breakpoint: breakpoints.vp4, settings: {
                                    slidesToShow: 6, slidesToScroll: 6
                                }
                        }, {
                            breakpoint: breakpoints.vp3, settings: {
                                    slidesToShow: 4, slidesToScroll: 4
                                }
                        }, {
                            breakpoint: breakpoints.vp2, settings: {
                                    slidesToShow: 3, slidesToScroll: 3, arrows: false, dots: true
                                }
                        }, {
                            breakpoint: breakpoints.vp1 + 60, settings: {
                                    slidesToShow: 2, slidesToScroll: 2, arrows: false, dots: true
                                }
                        }]
            })
        }
        else if (element.hasClass('carousel-6'))
        {
            element.slick({
                infinite: false, speed: 800, slide: '.slide', slidesToShow: 6, slidesToScroll: 6, appendArrows: element.closest('.section').find('.section-header-arrows'), responsive: [{
                            breakpoint: breakpoints.vp4, settings: {
                                    slidesToShow: 4, slidesToScroll: 4
                                }
                        }, {
                            breakpoint: breakpoints.vp2, settings: {
                                    slidesToShow: 3, slidesToScroll: 3, arrows: false, dots: true
                                }
                        }, {
                            breakpoint: breakpoints.vp1 + 60, settings: {
                                    slidesToShow: 2, slidesToScroll: 2, arrows: false, dots: true
                                }
                        }]
            })
        }
        else if (element.hasClass('carousel-5'))
        {
            element.slick({
                infinite: false, speed: 800, slide: '.slide', slidesToShow: 5, slidesToScroll: 5, appendArrows: element.closest('.section').find('.section-header-arrows'), responsive: [{
                            breakpoint: 768, settings: {
                                    slidesToShow: 3, slidesToScroll: 3
                                }
                        }]
            })
        }
        else if (element.hasClass('carousel-4'))
        {
            element.slick({
                infinite: false, speed: 800, slide: '.slide', slidesToShow: 4, slidesToScroll: 4, appendArrows: element.closest('.section').find('.section-header-arrows'), responsive: [{
                            breakpoint: breakpoints.vp4, settings: {
                                    slidesToShow: 3, slidesToScroll: 3
                                }
                        }, {
                            breakpoint: breakpoints.vp3, settings: {
                                    slidesToShow: 2, slidesToScroll: 2
                                }
                        }, {
                            breakpoint: breakpoints.vp2, settings: {
                                    slidesToShow: 1, slidesToScroll: 1, arrows: false, dots: true
                                }
                        }]
            })
        }
    }
    return {
            loadAll: loadAll, loadOne: loadOne
        }
});
require(['oneStore.slick'], function(slick)
{
    slick.loadAll()
})